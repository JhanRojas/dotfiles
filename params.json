{"name":"mmacedo's dotfiles","tagline":"My very own scripts ^^","body":"# My dot files #\r\n\r\nDesigned for my own use, but feel free to use and submit issues and suggestions. I would be glad to know that it helped anyone besides me.\r\n\r\n\r\n## OS\r\n\r\nUbuntu 13.04 Raring Ringtail (x86_64)\r\n\r\n\r\n## Setup\r\n\r\nAll commands below are meant to run on bash.\r\n\r\n```bash\r\n# Open bash\r\n/usr/bin/env bash\r\n```\r\n\r\n\r\n### Install software\r\n\r\nAdd software sources to install software that are not from Canonical:\r\n\r\n```bash\r\n# Enable Canonical Partner\r\nsudo sed -i \"/^# deb .*partner/ s/^# //\" /etc/apt/sources.list\r\n\r\n# Add ppa's\r\nsudo add-apt-repository -y ppa:chris-lea/node.js\r\nsudo add-apt-repository -y ppa:webupd8team/sublime-text-2\r\nsudo add-apt-repository -y ppa:skype-wrapper/ppa\r\n\r\n# Erlang/OTP ppa\r\nwget -O - http://binaries.erlang-solutions.com/debian/erlang_solutions.asc | sudo apt-key add -\r\necho \"deb http://binaries.erlang-solutions.com/debian quantal contrib\" | sudo tee -a /etc/apt/sources.list.d/esl.list\r\n\r\n# Heroku Toolbelt ppa\r\nwget -O- https://toolbelt.heroku.com/apt/release.key | sudo apt-key add -\r\necho \"deb http://toolbelt.heroku.com/ubuntu ./\" | sudo tee /etc/apt/sources.list.d/heroku.list\r\n\r\n# Opera ppa\r\nwget -O - http://deb.opera.com/archive.key | sudo apt-key add -\r\necho \"deb http://deb.opera.com/opera/ stable non-free\" | sudo tee /etc/apt/sources.list.d/opera.list\r\n\r\n# Google Talk Plugin ppa\r\nwget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\r\necho \"deb http://dl.google.com/linux/talkplugin/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/google.list\r\n```\r\n\r\nInstall apt packages:\r\n\r\n```bash\r\n# Update package list\r\nsudo apt-get update\r\n\r\n# Install this package first, because it requires manual interaction\r\nsudo apt-get install -y ttf-mscorefonts-installer\r\n\r\n# Install packages\r\ntypeset -A pkgfor\r\npkgfor[app]=\"fbreader sublime-text vim-gtk racket kdiff3-qt meld guake pinta\"\r\npkgfor[build]=\"build-essential checkinstall\"\r\npkgfor[db]=\"mongodb libsqlite3-dev postgresql libpq-dev\"\r\npkgfor[font]=\"fonts-inconsolata\"\r\npkgfor[git]=\"git git-svn gitstats gitk\"\r\npkgfor[media]=\"qbittorrent vlc audacious\"\r\npkgfor[shell]=\"zsh ack-grep autojump xclip trash-cli curl imagemagick heroku-toolbelt\"\r\npkgfor[stack]=\"python-setuptools nodejs rbenv openjdk-7-jdk esl-erlang\"\r\npkgfor[ubuntu]=\"ubuntu-restricted-extras aptitude synaptic python-software-properties p7zip-full p7zip-rar\"\r\npkgfor[x64]=\"ia32-libs\"\r\npkgfor[web]=\"chromium-browser chromium-codecs-ffmpeg-extra opera djview-plugin google-talkplugin skype skype-wrapper\"\r\nsudo apt-get install -y ${pkgfor[app]} ${pkgfor[build]} ${pkgfor[db]} ${pkgfor[font]} ${pkgfor[git]} ${pkgfor[media]} ${pkgfor[shell]} ${pkgfor[stack]} ${pkgfor[ubuntu]} ${pkgfor[x64]} ${pkgfor[web]} graphviz exuberant-ctags libxslt-dev libxml2-dev libxml2-utils libqt4-dev libreadline-dev libfreetype6-dev\r\n\r\n# Remove unwanted packages\r\nsudo apt-get purge -y unity-lens-shopping ubuntuone-client* python-ubuntuone-* totem deja-dup rhythmbox transmission* thunderbird\r\n\r\n# Perform full upgrade\r\nsudo apt-get dist-upgrade -y\r\n\r\n# Clean up\r\nsudo apt-get autoremove --purge -y\r\nsudo apt-get autoclean\r\n```\r\n\r\nInstall [PhantomJS](http://phantomjs.org/) manually, since apt package is too old:\r\n\r\n```bash\r\nPHANTOMJS=phantomjs-1.9.0-linux-x86_64\r\ncurl http://phantomjs.googlecode.com/files/$PHANTOMJS.tar.bz2 | tar -xj\r\nsudo mv $PHANTOMJS /usr/lib/phantomjs\r\nsudo ln -s /usr/lib/phantomjs/bin/phantomjs /usr/bin/phantomjs\r\n```\r\n\r\nInstall [Git-TF](https://gittf.codeplex.com/):\r\n\r\n```bash\r\nGITTF=git-tf-2.0.2.20130214\r\nwget http://download.microsoft.com/download/A/E/2/AE23B059-5727-445B-91CC-15B7A078A7F4/$GITTF.zip\r\nunzip $GITTF.zip && mv $GITTF git-tf && rm $GITTF.zip\r\nsed -i 's/dirname \"$0\"/dirname \"$(readlink -f $0)\"/' git-tf/git-tf\r\nsudo mv git-tf /usr/lib/\r\nsudo ln -s /usr/lib/git-tf/git-tf /usr/bin/git-tf\r\n```\r\n\r\n\r\n### Configure development environment\r\n\r\nConfigure SSH key:\r\n\r\n```bash\r\n# Generate SSH key\r\nssh-keygen -t rsa -C \"michelpm@gmail.com\"\r\n\r\n# Copy to clipboard\r\nxclip -sel clip < ~/.ssh/id_rsa.pub\r\n```\r\n\r\nTo upload to [Github](https://github.com/), go to [Account settings](https://github.com/settings/ssh), click 'Add SSH key', paste in the 'Key' text field and click in 'Add key'.\r\n\r\nTo upload the key to [Heroku](http://www.heroku.com/), use the [Heroku Toolbelt](https://toolbelt.herokuapp.com/):\r\n\r\n```bash\r\n# Login\r\nheroku login\r\n\r\n# Remove previous keys if you are not using them anymore, you may use also `keys:remove`\r\nheroku keys:clear\r\n\r\n# Upload\r\nheroku keys:add\r\n```\r\n\r\nConfigure workspace:\r\n\r\n```bash\r\n# The directory where you are going to clone the dotfiles repository\r\n# This variable will be used in several steps from here on\r\nDOTFILES=~/ws/etc/dotfiles\r\n\r\n# Create empty folders on the workspace\r\nmkdir -p ~/ws/{etc,st2,scala,adt,ruby,js}\r\n\r\n# Clone this repository\r\ngit clone https://github.com/mmacedo/dotfiles $DOTFILES\r\n```\r\n\r\n\r\n### Configure programming stacks\r\n\r\nInstall [Elixir](http://elixir-lang.org/) and [expm](http://expm.co/):\r\n\r\n```bash\r\n# elixir\r\nsudo git clone https://github.com/elixir-lang/elixir -b stable\r\npushd elixir && make test && popd\r\n\r\n# expm\r\ncurl -O http://expm.co/__download__/expm && chmod +x expm\r\nsudo mv expm bin/expm\r\n```\r\n\r\nInstall [sbt](http://www.scala-sbt.org/):\r\n\r\n```bash\r\ncurl http://scalasbt.artifactoryonline.com/scalasbt/sbt-native-packages/org/scala-sbt/sbt//0.12.3/sbt.tgz | tar -xz\r\n```\r\n\r\nInstall [giter8](https://github.com/n8han/giter8) using [Conscript](https://github.com/n8han/conscript):\r\n\r\n```bash\r\ncurl https://raw.github.com/n8han/conscript/master/setup.sh | bash\r\nbin/cs n8han/giter8\r\n```\r\n\r\nInstall [scala](http://www.scala-lang.org/):\r\n\r\n```bash\r\nSCALA=scala-2.10.1\r\ncurl http://www.scala-lang.org/downloads/distrib/files/$SCALA.tgz | tar -xz\r\nmv $SCALA scala\r\n```\r\n\r\nInstall [Play!](http://www.playframework.com/):\r\n\r\n```bash\r\nPLAY=play-2.1.1\r\ncurl http://downloads.typesafe.com/play/2.1.1/$PLAY.zip\r\nunzip $PLAY.zip\r\nmv $PLAY play\r\nln -s ~/play/play bin/play\r\n```\r\n\r\nInstall [pip](http://www.pip-installer.org/) and [virtualenv](http://www.virtualenv.org/):\r\n\r\n```bash\r\nsudo easy_install pip\r\nsudo pip install virtualenv virtualenvwrapper\r\n```\r\n\r\nInstall global [NPM](http://nodejs.org/) ([Node.js](http://nodejs.org/)) packages for their binaries (they will not be in the path to require as a library):\r\n\r\n```bash\r\nsudo npm install -global coffee-script less jade ejs jasmine-node\r\n```\r\n\r\nInstall several [rbenv](https://github.com/sstephenson/rbenv) plugins with [rbenv-installer](https://github.com/fesplugas/rbenv-installer) and the build the latest MRI/CRuby:\r\n\r\n```bash\r\n# Run rbenv-installer\r\ncurl https://raw.github.com/fesplugas/rbenv-installer/master/bin/rbenv-installer | bash\r\n\r\n# Run rbenv-bootstrap to install apt packages necessary to build Ruby on Ubuntu\r\nsudo rbenv bootstrap-ubuntu-12-04\r\n\r\n# Copy Ruby dotfiles\r\nfor rc in $DOTFILES/{irb,pry,gem}rc; do cp $rc ~/.${rc##*/}; done\r\n\r\n# Load rbenv ruby to install gems\r\neval \"$(rbenv init -)\"\r\n\r\n# List of gems to install\r\nGEMS_FOR_BUNDLER=\"bundler ruby-graphviz\"\r\nGEMS_FOR_PRY=\"pry awesome_print pry-debugger pry-stack_explorer ruby-prof\"\r\nDATABASE_GEMS=\"mongoid pg sqlite3\"\r\nC_GEMS=\"therubyracer bson_ext yajl-ruby nokogiri\"\r\n\r\n# Install latest MRI\r\nrbenv install 2.0.0-p0\r\nrbenv global 2.0.0-p0\r\n\r\n# Install gems\r\ngem update --system\r\ngem install $(echo rake thor $GEMS_FOR_BUNDLER $GEMS_FOR_PRY $DATABASE_GEMS $C_GEMS)\r\n```\r\n\r\n\r\n### Install and configure text editors and IDE's\r\n\r\nConfigure [Sublime Text 2](http://www.sublimetext.com/) and install [Sublime Package Control](http://wbond.net/sublime_packages/package_control) and [URL handler](http://blog.byscripts.info/2013/02/txmt-protocol-and-sublime-text-2-english.html). First time you open Sublime Text 2 after doing these steps, Sublime Text 2 will install Sublime Package Control. First time it opens after that, Sublime Package Control is going to read my list of packages and install every one of them, but it is going to generate several errors and may need a few restarts until it finishes. Also, do not forget to enter license.\r\n\r\n```bash\r\nST2=~/.config/sublime-text-2\r\n\r\n# Copy configuration\r\nmkdir -p $ST2/Packages/User\r\ncp $DOTFILES/st2/* $ST2/Packages/User\r\n\r\n# Install package_control package\r\nmkdir -p $ST2/Installed\\ Packages\r\ncurl http://sublime.wbond.net/Package%20Control.sublime-package > $ST2/Installed\\ Packages/Package\\ Control.sublime-package\r\n\r\n# Install url handler for txtm:// and subl:// with Sublime Text 2\r\nwget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler\r\nchmod +x sublime-url-handler\r\nsudo mv sublime-url-handler /usr/bin/\r\nwget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler.desktop\r\nsudo mv sublime-url-handler.desktop /usr/share/applications/\r\nsudo update-desktop-database\r\n```\r\n\r\nInstall a [Vim](http://www.vim.org/) [distribution](https://github.com/carlhuda/janus) (need the ruby in the path to have rake installed). I don't pay much to attention to it, since I use it mainly to edit git commit messages.\r\n\r\n```bash\r\ncurl -Lo- https://bit.ly/janus-bootstrap | bash\r\n```\r\n\r\nInstall [Scala IDE](http://scala-ide.org/):\r\n\r\n```bash\r\ncurl http://downloads.typesafe.com/scalaide-pack/3.0.0.vfinal-210-20130326/scala-SDK-3.0.0-vfinal-2.10-linux.gtk.x86_64.tar.gz | tar zx\r\nmv eclipse ~/scalaide\r\nconvert ~/scalaide/icon.xpm -resize 48x48 ~/scalaide/icon.xpm\r\nmkdir -p ~/.local/share/applications && cp $DOTFILES/scalaide/scalaide.desktop ~/.local/share/applications/scalaide.desktop\r\nmkdir -p ~/scalaide/configuration/.settings && cp $DOTFILES/scalaide/org.eclipse.ui.ide.prefs ~/scalaide/configuration/.settings/org.eclipse.ui.ide.prefs\r\nupdate-desktop-database\r\n```\r\n\r\nInstall [ADT Bundle](https://developer.android.com/sdk/installing/bundle.html):\r\n\r\n```bash\r\nADTBUNDLE=adt-bundle-linux-x86_64-20130219\r\ncurl -O http://dl.google.com/android/adt/$ADTBUNDLE.zip\r\nunzip $ADTBUNDLE.zip && rm $ADTBUNDLE.zip\r\nmv $ADTBUNDLE ~/adt\r\ncp $DOTFILES/adt/adt.xpm ~/adt/eclipse/icon.xpm\r\nmkdir -p ~/.local/share/applications && cp $DOTFILES/adt/adt.desktop ~/.local/share/applications/adt.desktop\r\nmkdir -p ~/adt/eclipse/configuration/.settings && cp $DOTFILES/adt/org.eclipse.ui.ide.prefs ~/adt/eclipse/configuration/.settings/org.eclipse.ui.ide.prefs\r\nupdate-desktop-database\r\n```\r\n\r\n\r\n### Configure command line tools\r\n\r\nConfigure default applications. It still doesn't set all that is necessary to make chromium the default web browser.\r\n\r\n```bash\r\nsudo update-alternatives --set x-www-browser /usr/bin/chromium-browser\r\nsudo update-alternatives --set gnome-www-browser /usr/bin/chromium-browser\r\ncp $DOTFILES/mimeapps.list ~/.local/share/applications\r\n```\r\n\r\nConfigure [ack](http://betterthangrep.com/):\r\n\r\n```bash\r\nsudo dpkg-divert --local --divert /usr/bin/ack --rename --add /usr/bin/ack-grep\r\ncp $DOTFILES/ackrc ~/.ackrc\r\n```\r\n\r\nConfigure [git](http://git-scm.com/):\r\n\r\n```bash\r\ncp $DOTFILES/gitconfig ~/.gitconfig\r\n```\r\n\r\nConfigure [zsh](http://www.zsh.org/) with [Oh My Zsh](https://github.com/robbyrussell/oh-my-zsh):\r\n\r\n```bash\r\ncurl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | bash\r\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting\r\nchsh -s /bin/zsh\r\ncp $DOTFILES/zshrc ~/.zshrc\r\ncp $DOTFILES/zshenv ~/.zshenv\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}